# Base configuration file for Perl DBA database backup program
#
# This configuration file is designed to use the YAML serialization
# language. See http://search.cpan.org/~ingy/YAML-0.35/YAML.pod for more
# information.
#
# This is the base configuration file. To actually backup databases you will
# need to specify the module for that database. With any particular module
# there should be an etc/dba-backup-<module>.yml file in the same directory as
# this file with server specific
# configuration information needed for that RDBMS. That .yml file should be
# edited and installed as well. Variables set in that file overide settings in
# this global conf when backing up databases in from that server type. 
#
#
# SECTIONS DESCRIPTION: 
#
#   db_connect - contains user name and password for the database server  
#
#   backup-params - controls how often and what is the max size of different
#                     log files before they are rotated	
#
#   mail-setup - controls whether email notifications will be send
#                  and to which people
#
#   backups - list of databases to be backed up give as
#                        name or as a pattern

# IMPORTANT: Ensure that this config file is owned by an appropriate privileged
#            user and group and its mode is 400 or 440.

# IMPORTANT: Comments on the same line as a config varible are not supported
#            Eg:  varname: value # commment  - invalid
#
#              varname: value 
#              # commment - valid 

--- #YAML:1.0

## db_connect ##
# Specifies the port, username, socket and the name of the temporary text file 
# for socket connections which the program will use to connect to the database 
# server with the databases which will be backed up

db_connect:
    PORT: 3306
    SOCKET: '/var/lib/mysql/mysql.sock'
    USER: backup
    PASSWORD: password
    RDBMS_HOST: localhost


## backup-params ##
# Specifies where the backups should be stored and how many log files
# to keep and when to delete them etc.
#
# DUMP_DIR - the directory where full database backups and binary logs
#            will be stored.
#
# LOG_FILE - the full path and the name of a file containing all messages
#            generated by the backup program
# 
# DUMP_COPIES - number of old dumps (and binary logs) to keep
#
# CYCLE_UPDATE_LOGS_DAILY - binary update log will be cycled with
#                        every full dump regardless.  Specify 'yes'
#                        here if you want it to also be cycled and
#                        moved to the dump_dir every day (every time
#                        the script is run) [recommended]

backup_params:
    DUMP_DIR: '/path/to/dump/dir'
    LOG_FILE: '/path/to/backup.log'
    DUMP_COPIES: 2
    CYCLE_UPDATE_LOGS_DAILY: yes

# Which other log rotations to perform - these may not apply to all RDBMS.
# The location of the logs for any specific RDBMS must be specified in that
# servers plugin conf.
    ROTATE_GEN_QUERY_LOGS: yes
    MAX_GEN_LOG_SIZE: 1024
    MAX_GEN_LOG_FILES: 5
    
    ROTATE_SLOW_QUERY_LOGS: yes
    MAX_SLOW_LOG_SIZE: 128
    MAX_SLOW_LOG_FILES: 10
    
    ROTATE_ERROR_LOGS: yes
    MAX_ERROR_LOG_SIZE: 128
    MAX_ERROR_LOG_FILES: 10


## bin_dir ##
#
# list the path to executables needed for backups

bin_dir:
    gzip: '/usr/bin/gzip'


## backup-databases ##
#
# Logs will be backed up every time the backup program is run, unless
# that activity is specifically turned off. The logs will always be
# flushed and backed up whenever the databases are backed up. This is
# not considered optional.
# We recommend running it daily.
#
# List all the databases you want to back up for each server type
# in the following format:
#mysql_backup:
#    databases:
#        - mysql
#        - database1
#        - database2
#        - etc
#    days: Sat
#
# List all the days you want your databases backed up as well in a coma
# seperated list:
#    days: Mon,Wed,Sat
# For most sites, once a week + daily logs is sufficient
#
# To leave configuring the specifics to the appropriate plugin conf, just
# indicate the server types to backup as such:
#mysql_backup:
#postgresql_backup:


## mail-setup ##
# controls the email notification features for the script allows the 
# creation of a list of users which will be notified when the program
# is ran
#
# mail_notification - enable/disable the email notification. Valid
#                     values are 'yes'/'no'
#
# mail_to - comma separated list of email addresses to whom status
#           notification emails will be sent
#
# mail_cc - comma separated list of email adresses of other people who
#           will be copied on the notification emails
#
# mail_from - the email address from which the emails will appear to
#             come from
#
# mail_server - name of the mail server which will be used to send the
#               notification emails 

mail_setup:
    mail_notification: yes
    mail_to:
        - 'dba@your.domain.com'
    mail_cc:
        - 'developer-list@your.domain.com'
#        - 'qa-list@your.domain.com'
    mail_from: 'dba-backup@mysql_server.domain.com'
    mail_server: smtp.domain.com
